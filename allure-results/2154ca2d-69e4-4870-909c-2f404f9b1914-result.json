{"name": "test_account_selection", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TimeoutError: Page.wait_for_selector: Timeout 30000ms exceeded.\nCall log:\n  - waiting for locator(\"#userSelect\") to be visible", "trace": "self = <graduation_project.Other.tests.test_account_page.TestAccountPage object at 0x000001E2E8D76850>, page = <Page url='https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login'>\nlogin_page_pl = <Other.pages.login_page.LoginPage object at 0x000001E2E8ECAE40>, account_page_pl = <Other.pages.account_page.AccountPage object at 0x000001E2E8ECB0E0>\n\n    @allure.story('Тест выбора номера аккаунта')\n    def test_account_selection(self, page, login_page_pl, account_page_pl):\n        print(login_page_pl)\n        \"\"\"\n        Сценарий: Выбор номера аккаунта\n        Шаги авторизации:\n        1. Нажать кнопку Customer Login.\n        2. Кликнуть по селекту и выбрать в селекте одно из значений для входа.\n        3. Кликнуть на кнопку Login.\n        Шаги после авторизации:\n        1. Проверить, что селект для Account number отображается.\n        2. Кликнуть по селекту и проверить, что отображается 3 позиции для выбора.\n        3. Кликнуть по одному из вариантов в селекте.\n        4. Проверить, что отображается выбранное значение в селекте.\n        \"\"\"\n        # Шаги авторизации\n>       login_page_pl.click_customer_login()\n\nOther\\tests\\test_account_page.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nOther\\pages\\login_page.py:12: in click_customer_login\n    self.click(SELECT_LOGIN_LOCATOR)\nOther\\pages\\base_page.py:22: in click\n    element = self.page.wait_for_selector(selector=locator)\n.venv\\Lib\\site-packages\\playwright\\sync_api\\_generated.py:8181: in wait_for_selector\n    self._sync(\n.venv\\Lib\\site-packages\\playwright\\_impl\\_page.py:424: in wait_for_selector\n    return await self._main_frame.wait_for_selector(**locals_to_params(locals()))\n.venv\\Lib\\site-packages\\playwright\\_impl\\_frame.py:323: in wait_for_selector\n    await self._channel.send(\"waitForSelector\", locals_to_params(locals()))\n.venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:61: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Connection object at 0x000001E2E8DF7230>, cb = <function Channel.send.<locals>.<lambda> at 0x000001E2E90BA660>, is_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Page.wait_for_selector: Timeout 30000ms exceeded.\nE           Call log:\nE             - waiting for locator(\"#userSelect\") to be visible\n\n.venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:528: TimeoutError"}, "attachments": [{"name": "screenshot", "source": "7e995f76-8da8-48d4-8aae-f14ec212994a-attachment.png", "type": "image/png"}, {"name": "stdout", "source": "31ace5f6-d6c0-443e-8b10-352689ddf1f4-attachment.txt", "type": "text/plain"}], "start": 1741165274803, "stop": 1741165304819, "uuid": "6ac259e2-c032-43bc-8ffc-d3f42c5bdbd6", "historyId": "ef544753538e2a0e23832ae4bba242e6", "testCaseId": "ef544753538e2a0e23832ae4bba242e6", "fullName": "Other.tests.test_account_page.TestAccountPage#test_account_selection", "labels": [{"name": "feature", "value": "account_page"}, {"name": "story", "value": "Тест выбора номера аккаунта"}, {"name": "parentSuite", "value": "Other.tests"}, {"name": "suite", "value": "test_account_page"}, {"name": "subSuite", "value": "TestAccountPage"}, {"name": "host", "value": "Catherine"}, {"name": "thread", "value": "9268-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Other.tests.test_account_page"}]}